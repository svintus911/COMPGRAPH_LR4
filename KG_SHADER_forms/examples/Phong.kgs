<?xml version="1.0" encoding="utf-8"?>
<project vert=" varying vec2 texCoord;&#xD; varying vec3 Normal;&#xD; varying vec3 Position;&#xD; &#xD; uniform mat4 iModelViewMatrix;&#xD; &#xD; uniform vec3 iLightPos; &#xD; uniform vec3 iCamPos; &#xD; &#xD; varying vec3 iLightPos_mv;&#xD; varying vec3 iCamPos_mv;&#xD; &#xD; &#xD;void main(void)&#xD;{&#xD;    gl_Position = gl_ProjectionMatrix * gl_ModelViewMatrix*vec4(gl_Vertex.xyz,1.0);&#xD;    Position = (gl_ModelViewMatrix*gl_Vertex).xyz;&#xD;    texCoord = gl_MultiTexCoord0.xy;&#xD;    Normal = (gl_NormalMatrix *gl_Normal).xyz;&#xD;    Normal = normalize(Normal);&#xD;    &#xD;    iLightPos_mv = (iModelViewMatrix*vec4(iLightPos,1.0)).xyz;    &#xD;    iCamPos_mv = (iModelViewMatrix*vec4(iCamPos,1.0)).xyz;&#xD;}" pix="varying vec3 Normal;&#xD;varying vec3 Position;&#xD;vec3 Ia = vec3(0.2,0.2,0.2);&#xD;vec3 Id = vec3(0.7,0.7,0.7);&#xD;vec3 Is = vec3(1.0,1.0,1.0);&#xD;vec3 ma = vec3(1,1,1);&#xD;vec3 md = vec3(1,1,1);&#xD;vec3 ms = vec3(1,1,1);&#xD;float  alpha = 10.0;&#xD;&#xD;varying vec3 iLightPos_mv;&#xD;varying vec3 iCamPos_mv;&#xD;&#xD;&#xD;  &#xD;void main(void)&#xD;{&#x9;&#xD;&#x9;&#xD;&#x9;//ambient&#xD;&#x9;vec3 color_amb = Ia*ma;&#xD;&#x9;&#xD;&#x9;//diffuse&#xD;&#x9;vec3 light_vector = normalize(iLightPos_mv - Position);&#xD;&#x9;vec3 color_dif = Id*md*dot( light_vector, Normal);&#xD;&#x9;&#xD;&#x9;//specular&#xD;&#x9;vec3 cam_vector = normalize(iCamPos_mv - Position);&#xD;&#x9;vec3 reflect_vector = reflect(-light_vector,Normal);&#xD;&#x9;float cosRC = max(0.0,dot(cam_vector,reflect_vector));&#x9;&#xD;&#x9;vec3 col_spec = Is*ms*pow(cosRC,300);&#xD;&#x9;&#xD;&#xD;&#x9;gl_FragColor = vec4(color_amb + color_dif + col_spec,1.0);&#x9;&#xD;&#xD;}" tt0="0" t0="" tt1="0" t1="" tt2="0" t2="" tt3="0" t3="" />